{"ast":null,"code":"var _jsxFileName = \"/Users/omarassouma/innovatex-academy/frontend/src/modules/M1/ModuleOneQuiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../../sass/Modules/M1/ModuleOneQuiz.scss';\nimport { quiz_m1 } from '../../quizes/Quizes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ModuleOneQuiz = _ref => {\n  _s();\n  let {\n    SetBrainStorming,\n    SetModuleOneQuiz\n  } = _ref;\n  const [activeQuestion, SetActiveQuestion] = useState(0);\n  const [selectedAnswer, SetSelectedAnswer] = useState('');\n  const [showResult, SetShowResult] = useState(false);\n  const [selectedAnswerIndex, SetSelectedAnswerIndex] = useState(null);\n  const [result, SetResult] = useState({\n    score: 0,\n    correctAnswers: 0,\n    wrongAnswers: 0\n  });\n  const [allCorrect, SetAllCorrect] = useState(false);\n  const {\n    questions\n  } = quiz_m1;\n  const {\n    question,\n    choices,\n    correctAnswer\n  } = questions[activeQuestion];\n  const onClickNext = () => {\n    SetSelectedAnswerIndex(null);\n    SetResult(prev => selectedAnswer ? {\n      ...prev,\n      score: prev.score + 5,\n      correctAnswers: prev.correctAnswers + 1\n    } : {\n      ...prev,\n      wrongAnswers: prev.wrongAnswers + 1\n    });\n    if (activeQuestion !== questions.length - 1) {\n      SetActiveQuestion(prev => prev + 1);\n    } else {\n      if (result.correctAnswers + 1 === questions.length) {\n        SetShowResult(false);\n        SetAllCorrect(true);\n        SetBrainStorming(true);\n        SetModuleOneQuiz(false);\n      } else {\n        SetActiveQuestion(0);\n        SetShowResult(true);\n      }\n    }\n  };\n  const handleTryAgain = () => {\n    SetShowResult(false);\n  };\n  const onAnswerSelected = (answer, index) => {\n    SetSelectedAnswerIndex(index);\n    if (answer === correctAnswer) {\n      SetSelectedAnswer(true);\n    } else {\n      SetSelectedAnswer(false);\n    }\n  };\n  const addLeadingZero = number => number > 9 ? number : `0${number}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: !showResult ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"active-question-no\",\n          children: addLeadingZero(activeQuestion + 1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"total-question\",\n          children: [\"/\", addLeadingZero(questions.length)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: choices.map((answer, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => onAnswerSelected(answer, index),\n          className: selectedAnswerIndex === index ? 'selected-answer' : null,\n          children: answer\n        }, answer, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-right\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClickNext,\n          disabled: selectedAnswerIndex === null,\n          children: activeQuestion === questions.length - 1 ? 'Finish' : 'Next'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: !allCorrect && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Not everything is correct!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleTryAgain,\n          children: \" Try again \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(ModuleOneQuiz, \"vVw0QHT0Vfg2/RFOP+7XHDb8vyo=\");\n_c = ModuleOneQuiz;\nvar _c;\n$RefreshReg$(_c, \"ModuleOneQuiz\");","map":{"version":3,"names":["React","useState","quiz_m1","jsxDEV","_jsxDEV","ModuleOneQuiz","_ref","_s","SetBrainStorming","SetModuleOneQuiz","activeQuestion","SetActiveQuestion","selectedAnswer","SetSelectedAnswer","showResult","SetShowResult","selectedAnswerIndex","SetSelectedAnswerIndex","result","SetResult","score","correctAnswers","wrongAnswers","allCorrect","SetAllCorrect","questions","question","choices","correctAnswer","onClickNext","prev","length","handleTryAgain","onAnswerSelected","answer","index","addLeadingZero","number","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/omarassouma/innovatex-academy/frontend/src/modules/M1/ModuleOneQuiz.js"],"sourcesContent":["import React, { useState } from 'react'\nimport '../../sass/Modules/M1/ModuleOneQuiz.scss'\nimport { quiz_m1 } from '../../quizes/Quizes'\n\n\n\n\n\n\nexport const ModuleOneQuiz = ({ SetBrainStorming, SetModuleOneQuiz }) => {\n    const [activeQuestion, SetActiveQuestion] = useState(0)\n    const [selectedAnswer, SetSelectedAnswer] = useState('')\n    const [showResult, SetShowResult] = useState(false)\n    const [selectedAnswerIndex, SetSelectedAnswerIndex] = useState(null)\n    const [result, SetResult] = useState({\n        score: 0,\n        correctAnswers: 0,\n        wrongAnswers: 0,\n    })\n    const [allCorrect, SetAllCorrect] = useState(false)\n    const { questions } = quiz_m1\n    const { question, choices, correctAnswer } = questions[activeQuestion]\n\n    const onClickNext = () => {\n        SetSelectedAnswerIndex(null)\n        SetResult((prev) =>\n            selectedAnswer\n                ? {\n                    ...prev,\n                    score: prev.score + 5,\n                    correctAnswers: prev.correctAnswers + 1,\n                }\n                : { ...prev, wrongAnswers: prev.wrongAnswers + 1 }\n        )\n        if (activeQuestion !== questions.length - 1) {\n            SetActiveQuestion((prev) => prev + 1)\n        } else {\n\n            if (result.correctAnswers + 1 === questions.length) {\n                SetShowResult(false)\n                SetAllCorrect(true)\n                SetBrainStorming(true)\n                SetModuleOneQuiz(false)\n            } else {\n                SetActiveQuestion(0)\n                SetShowResult(true)\n            }\n        }\n    }\n\n    const handleTryAgain = () => {\n        SetShowResult(false);\n    }\n    const onAnswerSelected = (answer, index) => {\n        SetSelectedAnswerIndex(index)\n        if (answer === correctAnswer) {\n            SetSelectedAnswer(true)\n        } else {\n            SetSelectedAnswer(false)\n        }\n    }\n\n    const addLeadingZero = (number) => (number > 9 ? number : `0${number}`)\n\n    return (\n        <div className=\"quiz-container\">\n            {!showResult ? (\n                <div className='wrapper'>\n                    <div>\n                        <span className=\"active-question-no\">\n                            {addLeadingZero(activeQuestion + 1)}\n                        </span>\n                        <span className=\"total-question\">\n                            /{addLeadingZero(questions.length)}\n                        </span>\n                    </div>\n                    <h2>{question}</h2>\n                    <ul>\n                        {choices.map((answer, index) => (\n                            <li\n                                onClick={() => onAnswerSelected(answer, index)}\n                                key={answer}\n                                className={\n                                    selectedAnswerIndex === index ? 'selected-answer' : null\n                                }>\n                                {answer}\n                            </li>\n                        ))}\n                    </ul>\n                    <div className=\"flex-right\">\n                        <button\n                            onClick={onClickNext}\n                            disabled={selectedAnswerIndex === null}>\n                            {activeQuestion === questions.length - 1 ? 'Finish' : 'Next'}\n                        </button>\n                    </div>\n                </div>\n            ) : (\n                <div className=\"result\">\n                    {!allCorrect && (\n                        <div className='result-div'>\n                            <p>Not everything is correct!</p>\n                            <button onClick={handleTryAgain}> Try again </button>\n                        </div>\n                    )}\n                </div>\n            )}\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}